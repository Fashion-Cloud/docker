version: "3"
services:
  spring-boot:
    build: ../backend
    container_name: fc_springboot
    image: spring-boot
    environment:
      SPRING_DATASOURCE_URL: ${POSTGRES_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    restart: on-failure
    depends_on:
      - postgresql
    ports:
      - "8080:8080"

  postgresql:
    container_name: fc_postgresql
    image: postgres
    restart: always
    environment:
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Seoul
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    container_name: fc_redis
    ports:
      - "6379:6379"

  nginx:
    build: ./nginx
    container_name: fc_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - build_folder:/var/www/frontend
    depends_on:
      - spring-boot

  client:
    container_name: client
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/frontend
      - build_folder:/frontend/build
    tty: true
