version: "3"

networks:
  k6:
  grafana:

volumes:
  build_folder:

services:
  spring-boot:
    build: ../backend
    container_name: fc_springboot
    image: spring-boot
    environment:
      SPRING_DATASOURCE_URL: ${POSTGRES_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    restart: on-failure
    depends_on:
      - postgresql
    ports:
      - "8080:8080"

  postgresql:
    container_name: fc_postgresql
    image: postgres
    restart: always
    environment:
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Seoul
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    container_name: fc_redis
    ports:
      - "6379:6379"

  influxdb:
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  grafana:
    image: grafana/grafana:latest
    networks:
      - grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana:/etc/grafana/provisioning/

  k6:
    image: grafana/k6:latest
    networks:
      - k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./scripts:/scripts
    tty: true

  # nginx:
  #   build: ./nginx
  #   container_name: fc_nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - build_folder:/var/www/frontend
  #   depends_on:
  #     - spring-boot

  # client:
  #   build: ../frontend
  #   container_name: client
  #   volumes:
  #     - ../frontend/:/frontend
  #     - build_folder:/frontend/build
  #   tty: true
