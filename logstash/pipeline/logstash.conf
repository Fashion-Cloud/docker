input {
  beats {
    port => 5044
  }
}


filter {

  grok {
    match => { "message" => '%{IPORHOST:client_ip} - - \[%{HTTPDATE:timestamp}\] "%{WORD:http_method} %{URIPATHPARAM:request_path}\?latitude=%{NUMBER:lat}&longitude=%{NUMBER:lon} HTTP/%{NUMBER:http_version}" %{NUMBER:response_code} %{NUMBER:response_bytes} "-" "%{DATA:user_agent}" -' }
  }

  mutate {

     convert => {"lat" => "float"}
     convert => {"lon" => "float"}

    }
  mutate {
    add_field=> {"[locations][lat]"=>"%{lat}"}
    add_field=> {"[locations][lon]"=>"%{lon}"}

  }
   mutate {
      convert=> {"[locations][lat]"=>"float"}
      convert=> {"[locations][lon]"=>"float"}

    }

}

#   grok {
#     match => { "message" => '%{IPORHOST:client_ip} - %{USER:remote_user} \[%{HTTPDATE:timestamp}\] "%{WORD:http_method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}" %{NUMBER:status_code} %{NUMBER:response_bytes} "-" "%{DATA:user_agent}" "(?<json_data>\\x0D\\x0A\{.*\}\\x0D\\x0A)" "-"'}
#   }

#
#   json {
#     source => "json_data"
#     target => "parsed_data"
#     remove_field => ["json_data"]
#   }
# }
#
#  mutate {
#    convert => ["response", "integer"]
#    convert => ["bytes", "integer"]
#    convert => ["responsetime", "float"]
#  }
#  geoip {
#    source => "clientip"
#    target => "geoip"
#    add_tag => [ "nginx-geoip" ]
#  }
#  date {
#    match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
#    remove_field => [ "timestamp" ]
#  }
#  useragent {
#    source => "agent"
#  }
# }

output {
 elasticsearch {
   hosts => ["http://elasticsearch:9200"]
   index => "nginx_loc"
   document_type => "nginx_logs"
   user     => "elastic"
   password => "changeme"
 }
 stdout { codec => rubydebug }
}








